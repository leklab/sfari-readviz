# include the application.conf at the top
include required(classpath("application"))

system.delete-workflow-files = true
system.file-hash-cache = true

services {
  HealthMonitor {
	config {
		check-timeout = 2 minutes
		check-failure-retry-count = 4
		check-failure-retry-interval = 30 seconds
	}
  }
}

system {
  io {
	number-of-attempts = 10000
  }

}


backend {
  default = "Local"

  providers {
	Local {
  		actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
  		config {
        # Optional limits on the number of concurrent jobs
        concurrent-job-limit = 100


        # If true submits scripts to the bash background using "&". Only usefull for dispatchers that do NOT submit
        # the job and then immediately return a scheduled job id.
        run-in-background = true

        # `temporary-directory` creates the temporary directory for commands.
        #
        # If this value is not set explicitly, the default value creates a unique temporary directory, equivalent to:
        # temporary-directory = "$(mktemp -d \"$PWD\"/tmp.XXXXXX)"

        # The list of possible runtime custom attributes.
        runtime-attributes = """
        String? docker
        String? docker_user
        """

        # Submit string when there is no "docker" runtime attribute.
        submit = "/usr/bin/env bash ${script}"

        # Submit string when there is a "docker" runtime attribute.
        submit-docker = """
        docker run \
          --rm -i \
          ${"--user " + docker_user} \
          --entrypoint ${job_shell} \
          -v ${cwd}:${docker_cwd} \
          ${docker} ${docker_script}
        """

        # Root directory where Cromwell writes job results.  This directory must be
        # visible and writeable by the Cromwell process as well as the jobs that Cromwell
        # launches.
        #root = "cromwell-executions"
        root = "/scratch/mlek/cromwell-executions"

        # Root directory where Cromwell writes job results in the container. This value
        # can be used to specify where the execution folder is mounted in the container.
        # it is used for the construction of the docker_cwd string in the submit-docker
        # value above.
        dockerRoot = "/cromwell-executions"

  		
			filesystems {
 				local {
   					localization: [
     						"soft-link", "hard-link", "copy"
   					]

            		## call caching config relating to the filesystem side
            		caching {
              			# When copying a cached result, what type of file duplication should occur. Attempted in the order listed below:
              			duplication-strategy: [
                			"soft-link"
              			]
              			# hashing-strategy: "path+modtime"
              			# Possible values: file, path, path+modtime
              			# "file" will compute an md5 hash of the file content.
              			# "path" will compute an md5 hash of the file path. This strategy will only be effective if the duplication-strategy (above) is set to "soft-link",
             		 	# in order to allow for the original file path to be hashed.

              			# check-sibling-md5: false
              			# When true, will check if a sibling file with the same name and the .md5 extension exists, and if it does, use the content of this file as a hash.
              			# If false or the md5 does not exist, will proceed with the above-defined hashing strategy.
					}
            	}
			}
		}
	}
  }
}

database {
  # mysql example
  #driver = "slick.driver.MySQLDriver$" #old way

  profile = "slick.jdbc.MySQLProfile$"


  # see all possible parameters and default values here:
  # http://slick.lightbend.com/doc/3.2.0/api/index.html#slick.jdbc.JdbcBackend$DatabaseFactoryDef@forConfig(String,Config,Driver):Database
  # https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-jdbc-url-format.html

  db {
    driver = "com.mysql.cj.jdbc.Driver"
    url = "jdbc:mysql://chdgenes.org/cromwell?rewriteBatchedStatements=true&useSSL=false&serverTimezone=UTC"
    user = "cromwell"
    password = "L3kK1ds2018"
    connectionTimeout = 5000
  }

  # For batch inserts the number of inserts to send to the DB at a time
  insert-batch-size = 2000

}

